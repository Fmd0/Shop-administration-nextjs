// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Market {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  name              String      @unique
  icon              String
  rating            String?
  ratingAmount      String?
  description       String?
  website           String?
  email             String?
  telephone         String?
  facebook          String?
  ins               String?
  youtube           String?
  address           String?
  privacyPolicy     String?
  refundPolicy      String?
  shippingPolicy    String?
  commodities       Commodity[]
}


model Commodity {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  price             String
  promotingPrice    String?
  images            String[]
  rating            String?
  ratingAmount      String?
  description       String?

  market            Market?      @relation(fields: [marketId], references: [id])
  marketId          String?      @db.ObjectId

  skuConfigs        SkuConfig[]
  skuItems          SkuItem[]

  @@unique([name, marketId])
}


model SkuConfig {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  key               String
  value             String[]
  defaultValue      String

  commodity         Commodity?  @relation(fields: [commodityId], references: [id])
  commodityId       String?     @db.ObjectId

  @@unique([key, commodityId])
}


model SkuItem {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  sku               Json
  price             String
  image             String?
  stock             String

  commodity         Commodity?  @relation(fields: [commodityId], references: [id])
  commodityId       String?     @db.ObjectId

  @@unique([sku, commodityId])
}


